version: '3.8'

networks:
  tutor-platform-network:
    name: tutor-platform-network
    driver: bridge

services:
  keycloak:
    build:
      context: .
      dockerfile: Dockerfile.keycloak
    container_name: keycloak
    restart: always
    environment:
      KC_HOSTNAME: auth.speakshire.com       
      KC_HOSTNAME_ADMIN: auth.speakshire.com
      KC_PROXY: edge                                     
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HOSTNAME_BACKCHANNEL_DYNAMIC: "true"
      KC_LOG_LEVEL: DEBUG
      KC_DB: postgres
      KC_DB_URL_HOST: postgres
      KC_DB_URL_PORT: 5432
      KC_DB_URL_DATABASE: keycloak_db
      KC_DB_USERNAME: sysadm
      KC_DB_PASSWORD: admin
    command: >
      start-dev
      --http-port 7080         
      --import-realm
    depends_on:
      - postgres
    networks:
      - tutor-platform-network
    volumes:
      - ./keycloak-realm.json:/opt/keycloak/data/import/keycloak-realm.json
      - ./tutorPlatformTheme:/opt/keycloak/themes/tutorPlatformTheme

  postgres:
    image: postgres:latest
    container_name: postgres-container
    restart: always
    environment:
      POSTGRES_USER: sysadm
      POSTGRES_PASSWORD: admin
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
    networks:
      - tutor-platform-network
    deploy:
      resources:
        limits:
          memory: 512M

  users-service:
    image: ghcr.io/aynurmuftakhov/users-service:latest
    container_name: users-service
    restart: always
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/user_service
      SPRING_DATASOURCE_USERNAME: sysadm
      SPRING_DATASOURCE_PASSWORD: admin
      JAVA_OPTS: "-Xms64m -Xmx128m"
    depends_on:
      - postgres
    networks:
      - tutor-platform-network
    volumes:
      - user-avatars:/app/uploads/avatars
    env_file:
      - userservice.env

  lessons-service:
    image: ghcr.io/aynurmuftakhov/lessons-service:latest
    container_name: lessons-service
    restart: always
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/lessons_service
      SPRING_DATASOURCE_USERNAME: sysadm
      SPRING_DATASOURCE_PASSWORD: admin
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      JAVA_OPTS: "-Xms64m -Xmx128m"
    depends_on:
      - postgres
    networks:
      - tutor-platform-network

  frontend-service:
    image: ghcr.io/aynurmuftakhov/tutor-platform-frontend:latest
    container_name: frontend-service
    restart: always
    networks:
      - tutor-platform-network
    environment:
      - CHOKIDAR_USEPOLLING=true

  notifications-service:
    image: ghcr.io/aynurmuftakhov/notifications-service:latest
    container_name: notifications-service
    restart: always
    networks:
      - tutor-platform-network
    depends_on:
      - postgres
      - kafka
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/notifications_service
      SPRING_DATASOURCE_USERNAME: sysadm
      SPRING_DATASOURCE_PASSWORD: admin
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      JAVA_OPTS: "-Xms64m -Xmx64m"

  vocabulary-service:
    image: ghcr.io/aynurmuftakhov/vocabulary-service:latest
    container_name: vocabulary-service
    restart: always
    networks:
      - tutor-platform-network
    depends_on:
      - postgres
      - kafka
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/vocabulary_service
      SPRING_DATASOURCE_USERNAME: sysadm
      SPRING_DATASOURCE_PASSWORD: admin
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      JAVA_OPTS: "-Xms64m -Xmx128m"

  video-service:
    image: ghcr.io/aynurmuftakhov/video-service:latest
    container_name: video-service
    restart: always
    networks:
      - tutor-platform-network
    environment:
      JAVA_OPTS: "-Xms64m -Xmx64m"

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - users-service
      - lessons-service
    networks:
      - tutor-platform-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    container_name: zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - tutor-platform-network

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    container_name: kafka
    restart: always
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - tutor-platform-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    restart: always
    ports:
      - "8088:8080"
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - tutor-platform-network

volumes:
  postgres-data:
  user-avatars:
