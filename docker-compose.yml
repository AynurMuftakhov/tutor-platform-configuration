version: '3.8'

networks:
  tutor-platform-network:
    name: tutor-platform-network
    driver: bridge

services:
  keycloak:
    build:
      context: .
      dockerfile: Dockerfile.keycloak
    container_name: keycloak
    environment:
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 7080
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HOSTNAME_BACKCHANNEL_DYNAMIC: "true"
      KC_LOG_LEVEL: INFO
      KC_DB: postgres
      KC_DB_URL_HOST: postgres
      KC_DB_URL_PORT: 5432
      KC_DB_URL_DATABASE: keycloak_db
      KC_DB_USERNAME: sysadm
      KC_DB_PASSWORD: admin
    ports:
      - "7080:7080"
      - "7443:7443"
    networks:
      - tutor-platform-network
    profiles:
      - keycloak
    depends_on:
      - postgres
    command: ["start-dev", "--http-port", "7080", "--https-port", "7443", "--import-realm"]
    volumes:
      - ./keycloak-realm.json:/opt/keycloak/data/import/keycloak-realm.json
      - ./tutorPlatformTheme:/opt/keycloak/themes/tutorPlatformTheme

  postgres:
    image: postgres:latest
    container_name: postgres-container
    restart: always
    environment:
      POSTGRES_USER: sysadm
      POSTGRES_PASSWORD: admin
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
    profiles:
      - db
    networks:
      - tutor-platform-network

  users-service:
    build:
      context: ./users-service
    container_name: users-service
    restart: always
    ports:
      - "8081:8081"
      - "5006:5006"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/user_service
      SPRING_DATASOURCE_USERNAME: sysadm
      SPRING_DATASOURCE_PASSWORD: admin
      KEYCLOAK_URL: ${KEYCLOAK_URL}
      KEYCLOAK_REALM: ${KEYCLOAK_REALM}
      KEYCLOAK_CLIENT_ID: ${KEYCLOAK_CLIENT_ID}
      KEYCLOAK_CLIENT_SECRET: ${KEYCLOAK_CLIENT_SECRET}
      JAVA_TOOL_OPTIONS: >-
        -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5006
    depends_on:
      - postgres
    profiles:
      - backend
    networks:
      - tutor-platform-network
    volumes:
      - user-avatars:/app/uploads/avatars

  lessons-service:
    build:
      context: ./lessons-service
    container_name: lessons-service
    restart: always
    ports:
      - "8082:8082"
      - "5005:5005"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/lessons_service
      SPRING_DATASOURCE_USERNAME: sysadm
      SPRING_DATASOURCE_PASSWORD: admin
      JAVA_TOOL_OPTIONS: >-
        -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
    depends_on:
      - postgres
    profiles:
      - backend
    networks:
      - tutor-platform-network

  frontend-service:
    build:
      context: ./tutor-platform-frontend
    container_name: frontend-service
    restart: always
    ports:
      - "3000:3000"
    profiles:
      - frontend
    volumes:
      - ./tutor-platform-frontend:/app
      - /app/node_modules
    networks:
      - tutor-platform-network
    environment:
      - CHOKIDAR_USEPOLLING=true

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - users-service
      - lessons-service
    profiles:
      - gw
    networks:
      - tutor-platform-network

  mailhog:
    container_name: mailhog
    image: mailhog/mailhog
    ports:
      - "8025:8025"   # Web UI
      - "1025:1025"   # SMTP
    networks:
      - tutor-platform-network
    profiles:
        - dev
volumes:
  postgres-data:
  user-avatars:
